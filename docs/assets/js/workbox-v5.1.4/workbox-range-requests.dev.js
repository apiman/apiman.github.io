this.workbox=this.workbox||{},this.workbox.rangeRequests=function(e,t,n,s){"use strict";try{self["workbox:range-requests:5.1.4"]&&_()}catch{}function i(e,s,o){n.assert.isInstance(e,Blob,{moduleName:"workbox-range-requests",funcName:"calculateEffectiveBoundaries",paramName:"blob"});const i=e.size;if(o&&o>i||s&&s<0)throw new t.WorkboxError("range-not-satisfiable",{size:i,end:o,start:s});let a,r;return s!==0[0]&&o!==0[0]?(a=s,r=o+1):s!==0[0]&&o===0[0]?(a=s,r=i):o!==0[0]&&s===0[0]&&(a=i-o,r=i),{start:a,end:r}}function a(e){n.assert.isType(e,"string",{moduleName:"workbox-range-requests",funcName:"parseRangeHeader",paramName:"rangeHeader"});const o=e.trim().toLowerCase();if(!o.startsWith("bytes="))throw new t.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:o});if(o.includes(","))throw new t.WorkboxError("single-range-only",{normalizedRangeHeader:o});const s=/(\d*)-(\d*)/.exec(o);if(!s||!s[1]&&!s[2])throw new t.WorkboxError("invalid-range-values",{normalizedRangeHeader:o});return{start:s[1]===""?0[0]:Number(s[1]),end:s[2]===""?0[0]:Number(s[2])}}async function o(e,o){try{if("dev"!=="production"&&(n.assert.isInstance(e,Request,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"request"}),n.assert.isInstance(o,Response,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"originalResponse"})),o.status===206)return o;const l=e.headers.get("range");if(!l)throw new t.WorkboxError("no-range-header");const d=a(l),r=await o.blob(),s=i(r,d.start,d.end),u=r.slice(s.start,s.end),h=u.size,c=new Response(u,{status:206,statusText:"Partial Content",headers:o.headers});return c.headers.set("Content-Length",String(h)),c.headers.set("Content-Range",`bytes ${s.start}-${s.end-1}/`+r.size),c}catch(t){return s.logger.warn(`Unable to construct a partial response; returning a `+`416 Range Not Satisfiable response instead.`),s.logger.groupCollapsed(`View details here.`),s.logger.log(t),s.logger.log(e),s.logger.log(o),s.logger.groupEnd(),new Response("",{status:416,statusText:"Range Not Satisfiable"})}}class r{constructor(){this.cachedResponseWillBeUsed=async({request:e,cachedResponse:t})=>t&&e.headers.has("range")?await o(e,t):t}}return e.RangeRequestsPlugin=r,e.createPartialResponse=o,e}({},workbox.core._private,workbox.core._private,workbox.core._private)