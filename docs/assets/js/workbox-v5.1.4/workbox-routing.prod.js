this.workbox=this.workbox||{},this.workbox.routing=function(e,t){"use strict";try{self["workbox:routing:5.1.4"]&&_()}catch{}const o=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=o(t),this.match=e,this.method=n}}class a extends n{constructor(e,t,n){super(({url:t})=>{const n=e.exec(t.href);if(n&&(t.origin===location.origin||0===n.index))return n.slice(1)},t,n)}}class r{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:n}=e,t=this.handleRequest({request:n,event:e});t&&e.respondWith(t)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:n}=e.data,t=Promise.all(n.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(t),e.ports&&e.ports[0]&&t.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:a,route:i}=this.findMatchingRoute({url:s,request:e,event:t});let n,o=i&&i.handler;if(!o&&this.s&&(o=this.s),o){try{n=o.handle({url:s,request:e,event:t,params:a})}catch(e){n=Promise.reject(e)}return n instanceof Promise&&this.o&&(n=n.catch(n=>this.o.handle({url:s,request:e,event:t}))),n}}findMatchingRoute({url:e,request:t,event:n}){const s=this.t.get(t.method)||[];for(const a of s){let i;const o=a.match({url:e,request:t,event:n});if(o)return i=o,(Array.isArray(o)&&0===o.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(i=0[0]),{route:a,params:i}}return{}}setDefaultHandler(e){this.s=o(e)}setCatchHandler(e){this.o=o(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t.WorkboxError("unregister-route-but-not-found-with-method",{method:e.method});const n=this.t.get(e.method).indexOf(e);if(!(n>-1))throw new t.WorkboxError("unregister-route-route-not-registered");this.t.get(e.method).splice(n,1)}}let s;const i=()=>(s||(s=new r,s.addFetchListener(),s.addCacheListener()),s);return e.NavigationRoute=class extends n{constructor(e,{allowlist:t=[/./],denylist:n=[]}={}){super(e=>this.i(e),e),this.u=t,this.h=n}i({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;const n=e.pathname+e.search;for(const e of this.h)if(e.test(n))return!1;return!!this.u.some(e=>e.test(n))}},e.RegExpRoute=a,e.Route=n,e.Router=r,e.registerRoute=function(e,s,o){let r;if("string"==typeof e){const t=new URL(e,location.href);r=new n(({url:e})=>e.href===t.href,s,o)}else if(e instanceof RegExp)r=new a(e,s,o);else if("function"==typeof e)r=new n(e,s,o);else{if(!(e instanceof n))throw new t.WorkboxError("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return i().registerRoute(r),r},e.setCatchHandler=function(e){i().setCatchHandler(e)},e.setDefaultHandler=function(e){i().setDefaultHandler(e)},e}({},workbox.core._private)