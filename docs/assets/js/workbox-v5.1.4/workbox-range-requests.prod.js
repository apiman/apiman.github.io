this.workbox=this.workbox||{},this.workbox.rangeRequests=function(e,t){"use strict";try{self["workbox:range-requests:5.1.4"]&&_()}catch{}async function s(e,n){try{if(206===n.status)return n;const a=e.headers.get("range");if(!a)throw new t.WorkboxError("no-range-header");const r=function(e){const s=e.trim().toLowerCase();if(!s.startsWith("bytes="))throw new t.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:s});if(s.includes(","))throw new t.WorkboxError("single-range-only",{normalizedRangeHeader:s});const n=/(\d*)-(\d*)/.exec(s);if(!n||!n[1]&&!n[2])throw new t.WorkboxError("invalid-range-values",{normalizedRangeHeader:s});return{start:""===n[1]?0[0]:Number(n[1]),end:""===n[2]?0[0]:Number(n[2])}}(a),o=await n.blob(),s=function(e,n,s){const o=e.size;if(s&&s>o||n&&n<0)throw new t.WorkboxError("range-not-satisfiable",{size:o,end:s,start:n});let i,a;return 0[0]!==n&&0[0]!==s?(i=n,a=s+1):0[0]!==n&&0[0]===s?(i=n,a=o):0[0]!==s&&0[0]===n&&(i=o-s,a=o),{start:i,end:a}}(o,r.start,r.end),c=o.slice(s.start,s.end),l=c.size,i=new Response(c,{status:206,statusText:"Partial Content",headers:n.headers});return i.headers.set("Content-Length",String(l)),i.headers.set("Content-Range",`bytes ${s.start}-${s.end-1}/`+o.size),i}catch{return new Response("",{status:416,statusText:"Range Not Satisfiable"})}}return e.RangeRequestsPlugin=class{constructor(){this.cachedResponseWillBeUsed=async({request:e,cachedResponse:t})=>t&&e.headers.has("range")?await s(e,t):t}},e.createPartialResponse=s,e}({},workbox.core._private,workbox.core._private)