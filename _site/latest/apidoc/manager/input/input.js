var com = {
	"qmino":{
		"miredot":{
		},
	},
};
com.qmino.miredot.restApiSource = {
	"projectName":"apiman-manager-api-rest",
	"projectVersion":"1.1.9.Final",
	"projectTitle":"API Manager REST Services (1.1.9.Final)",
	"buildSystem":"maven 3",
	"miredotVersion":"1.6.2",
	"miredotRevision":"f89b750ce8b9",
	"jsonDocEnabled":true,
	"jsonDocHidden":false,
	"singlePage":false,
	"hideLogoOnTop":false,
	"initialCollapseLevel":1,
	"dateOfGeneration":"2015-10-23 14:02:22",
	"validLicense":true,
	"licenseErrorMessage":null,
	"licenseType":"PRO",
	"allowUsageTracking":true,
	"licenseHash":"-301080497801669283",
	"baseUrl":"http://localhost:8080/apiman",
	"issuesTabHidden":true,
};

com.qmino.miredot.restApiSource.tos = {
	"io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_UpdatePolicyBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_UpdatePolicyBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_UpdatePolicyBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_UpdatePolicyBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_UpdateServiceVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_UpdateServiceVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_UpdateServiceVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_UpdateServiceVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchCriteriaBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchCriteriaBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchCriteriaBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchCriteriaBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_UpdateApplicationBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_UpdateApplicationBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_UpdateApplicationBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_UpdateApplicationBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServiceGatewayBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServiceGatewayBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServiceGatewayBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServiceGatewayBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_NewServiceVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_NewServiceVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_NewServiceVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_NewServiceVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_members_MemberRoleBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_members_MemberRoleBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_members_MemberRoleBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_members_MemberRoleBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PluginSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PluginSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PluginSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PluginSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_gateways_UpdateGatewayBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_gateways_UpdateGatewayBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_gateways_UpdateGatewayBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_gateways_UpdateGatewayBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_NewRoleBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_NewRoleBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_NewRoleBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_NewRoleBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_gateways_NewGatewayBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_gateways_NewGatewayBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_gateways_NewGatewayBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_gateways_NewGatewayBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_RoleBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_RoleBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_RoleBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_RoleBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsageDataPoint_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsageDataPoint_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsageDataPoint_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsageDataPoint_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsageHistogramBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsageHistogramBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsageHistogramBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsageHistogramBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_OrganizationSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_OrganizationSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsagePerPlanBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsagePerPlanBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsagePerPlanBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsagePerPlanBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_contracts_NewContractBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_contracts_NewContractBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_contracts_NewContractBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_contracts_NewContractBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_NewPlanVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_NewPlanVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_NewPlanVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_NewPlanVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApiEntryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApiEntryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApiEntryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApiEntryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_PermissionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_PermissionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_PermissionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_PermissionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_UpdatePlanBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_UpdatePlanBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_UpdatePlanBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_UpdatePlanBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_NewServiceBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_NewServiceBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_NewServiceBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_NewServiceBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_ApplicationVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_ApplicationVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_ApplicationVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_ApplicationVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServiceBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServiceBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServiceBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServiceBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyChainBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyChainBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyChainBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyChainBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApiRegistryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApiRegistryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApiRegistryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApiRegistryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_OrderByBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_OrderByBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_OrderByBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_OrderByBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ContractSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ContractSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ContractSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ContractSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_CurrentUserBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_CurrentUserBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_CurrentUserBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_CurrentUserBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServiceSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServiceSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServiceSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServiceSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_orgs_OrganizationBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_orgs_OrganizationBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_orgs_OrganizationBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_orgs_OrganizationBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PolicySummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PolicySummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PolicySummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PolicySummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_orgs_NewOrganizationBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_orgs_NewOrganizationBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_orgs_NewOrganizationBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_orgs_NewOrganizationBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_audit_AuditEntryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_audit_AuditEntryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_audit_AuditEntryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_audit_AuditEntryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_UpdateServiceBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_UpdateServiceBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_UpdateServiceBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_UpdateServiceBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_ApplicationBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_ApplicationBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_ApplicationBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_ApplicationBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApplicationSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApplicationSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_NewApplicationVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_NewApplicationVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_NewApplicationVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_NewApplicationVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_gateways_GatewayBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_gateways_GatewayBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_gateways_GatewayBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_gateways_GatewayBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_PlanVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_PlanVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_PlanVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_PlanVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_NewPolicyBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_NewPolicyBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_policies_NewPolicyBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_policies_NewPolicyBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UserPermissionsBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UserPermissionsBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UserPermissionsBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UserPermissionsBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plugins_NewPluginBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plugins_NewPluginBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plugins_NewPluginBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plugins_NewPluginBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PlanSummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PlanSummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_PlanSummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_PlanSummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServicePlanBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServicePlanBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServicePlanBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServicePlanBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_PagingBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_PagingBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_PagingBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_PagingBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_NewPlanBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_NewPlanBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_NewPlanBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_NewPlanBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UserBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UserBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UserBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UserBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_actions_ActionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_actions_ActionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_actions_ActionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_actions_ActionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_GatewayTestResultBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_GatewayTestResultBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_GatewayTestResultBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_GatewayTestResultBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_GrantRolesBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_GrantRolesBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_GrantRolesBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_GrantRolesBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_PlanBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_PlanBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plans_PlanBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plans_PlanBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_system_SystemStatusBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_system_SystemStatusBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_system_SystemStatusBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_system_SystemStatusBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plugins_PluginBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plugins_PluginBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_plugins_PluginBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_plugins_PluginBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServiceVersionBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServiceVersionBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_services_ServiceVersionBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_services_ServiceVersionBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UpdateUserBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UpdateUserBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UpdateUserBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UpdateUserBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UpdateRoleBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UpdateRoleBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_idm_UpdateRoleBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_idm_UpdateRoleBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_contracts_ContractBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_contracts_ContractBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_contracts_ContractBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_contracts_ContractBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_GatewaySummaryBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_GatewaySummaryBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_summary_GatewaySummaryBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_summary_GatewaySummaryBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_NewApplicationBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_NewApplicationBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_apps_NewApplicationBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_apps_NewApplicationBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsagePerAppBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsagePerAppBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_metrics_UsagePerAppBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_metrics_UsagePerAppBean_out",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_members_MemberBean_in":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_members_MemberBean_in",
		"content":[
		],
	},
	"io_apiman_manager_api_beans_members_MemberBean_out":{
		"type":"complex",
		"name":"io_apiman_manager_api_beans_members_MemberBean_out",
		"content":[
		],
	},
};
com.qmino.miredot.restApiSource.enums = {
	"io_apiman_manager_api_beans_metrics_HistogramIntervalType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.metrics.HistogramIntervalType",
		"values":[
			{
				"name":"month",
				"comment":null,
			},
			{
				"name":"week",
				"comment":null,
			},
			{
				"name":"day",
				"comment":null,
			},
			{
				"name":"hour",
				"comment":null,
			},
			{
				"name":"minute",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_summary_PolicyFormType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.summary.PolicyFormType",
		"values":[
			{
				"name":"Default",
				"comment":null,
			},
			{
				"name":"JsonSchema",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_policies_PolicyType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.policies.PolicyType",
		"values":[
			{
				"name":"Application",
				"comment":null,
			},
			{
				"name":"Plan",
				"comment":null,
			},
			{
				"name":"Service",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_actions_ActionType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.actions.ActionType",
		"values":[
			{
				"name":"publishService",
				"comment":null,
			},
			{
				"name":"retireService",
				"comment":null,
			},
			{
				"name":"registerApplication",
				"comment":null,
			},
			{
				"name":"unregisterApplication",
				"comment":null,
			},
			{
				"name":"lockPlan",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_services_EndpointType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.services.EndpointType",
		"values":[
			{
				"name":"rest",
				"comment":null,
			},
			{
				"name":"soap",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_search_SearchCriteriaFilterOperator":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.search.SearchCriteriaFilterOperator",
		"values":[
			{
				"name":"bool_eq",
				"comment":null,
			},
			{
				"name":"eq",
				"comment":null,
			},
			{
				"name":"neq",
				"comment":null,
			},
			{
				"name":"gt",
				"comment":null,
			},
			{
				"name":"gte",
				"comment":null,
			},
			{
				"name":"lt",
				"comment":null,
			},
			{
				"name":"lte",
				"comment":null,
			},
			{
				"name":"like",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_audit_AuditEntryType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.audit.AuditEntryType",
		"values":[
			{
				"name":"Create",
				"comment":null,
			},
			{
				"name":"Update",
				"comment":null,
			},
			{
				"name":"Delete",
				"comment":null,
			},
			{
				"name":"Clone",
				"comment":null,
			},
			{
				"name":"Grant",
				"comment":null,
			},
			{
				"name":"Revoke",
				"comment":null,
			},
			{
				"name":"Publish",
				"comment":null,
			},
			{
				"name":"Retire",
				"comment":null,
			},
			{
				"name":"Register",
				"comment":null,
			},
			{
				"name":"Unregister",
				"comment":null,
			},
			{
				"name":"AddPolicy",
				"comment":null,
			},
			{
				"name":"RemovePolicy",
				"comment":null,
			},
			{
				"name":"UpdatePolicy",
				"comment":null,
			},
			{
				"name":"ReorderPolicies",
				"comment":null,
			},
			{
				"name":"CreateContract",
				"comment":null,
			},
			{
				"name":"BreakContract",
				"comment":null,
			},
			{
				"name":"Lock",
				"comment":null,
			},
			{
				"name":"UpdateDefinition",
				"comment":null,
			},
			{
				"name":"DeleteDefinition",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_gateways_GatewayType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.gateways.GatewayType",
		"values":[
			{
				"name":"REST",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_services_ServiceStatus":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.services.ServiceStatus",
		"values":[
			{
				"name":"Created",
				"comment":null,
			},
			{
				"name":"Ready",
				"comment":null,
			},
			{
				"name":"Published",
				"comment":null,
			},
			{
				"name":"Retired",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_apps_ApplicationStatus":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.apps.ApplicationStatus",
		"values":[
			{
				"name":"Created",
				"comment":null,
			},
			{
				"name":"Ready",
				"comment":null,
			},
			{
				"name":"Registered",
				"comment":null,
			},
			{
				"name":"Retired",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_idm_PermissionType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.idm.PermissionType",
		"values":[
			{
				"name":"orgView",
				"comment":null,
			},
			{
				"name":"orgEdit",
				"comment":null,
			},
			{
				"name":"orgAdmin",
				"comment":null,
			},
			{
				"name":"svcView",
				"comment":null,
			},
			{
				"name":"svcEdit",
				"comment":null,
			},
			{
				"name":"svcAdmin",
				"comment":null,
			},
			{
				"name":"appView",
				"comment":null,
			},
			{
				"name":"appEdit",
				"comment":null,
			},
			{
				"name":"appAdmin",
				"comment":null,
			},
			{
				"name":"planView",
				"comment":null,
			},
			{
				"name":"planEdit",
				"comment":null,
			},
			{
				"name":"planAdmin",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_plans_PlanStatus":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.plans.PlanStatus",
		"values":[
			{
				"name":"Created",
				"comment":null,
			},
			{
				"name":"Ready",
				"comment":null,
			},
			{
				"name":"Locked",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_services_ServiceDefinitionType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.services.ServiceDefinitionType",
		"values":[
			{
				"name":"None",
				"comment":null,
			},
			{
				"name":"SwaggerJSON",
				"comment":null,
			},
			{
				"name":"SwaggerYAML",
				"comment":null,
			},
			{
				"name":"WSDL",
				"comment":null,
			},
		],
	},
	"io_apiman_manager_api_beans_audit_AuditEntityType":{
		"type":"enum",
		"name":"io.apiman.manager.api.beans.audit.AuditEntityType",
		"values":[
			{
				"name":"Organization",
				"comment":null,
			},
			{
				"name":"Application",
				"comment":null,
			},
			{
				"name":"Plan",
				"comment":null,
			},
			{
				"name":"Service",
				"comment":null,
			},
		],
	},
};
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"value",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"operator",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_search_SearchCriteriaFilterOperator"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"value",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"operator",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_search_SearchCriteriaFilterOperator"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_in"].content = [
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_out"].content = [
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_in"].content = [
	{
		"name":"endpointType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_EndpointType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publicService",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointProperties",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"gateways",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_out"].content = [
	{
		"name":"publicService",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_EndpointType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointProperties",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"gateways",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_ServiceStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publicService",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_ServiceStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publicService",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"].content = [
	{
		"name":"filters",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"orderBy",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"paging",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"page",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"pageSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_out"].content = [
	{
		"name":"filters",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaFilterBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"orderBy",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"paging",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_out"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_in"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_out"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_in"].content = [
	{
		"name":"gatewayId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_out"].content = [
	{
		"name":"gatewayId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"cloneVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"clone",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_out"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"cloneVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"clone",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_in"].content = [
	{
		"name":"roleId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"roleName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_out"].content = [
	{
		"name":"roleId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"roleName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"classifier",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"groupId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"artifactId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"artifactId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"classifier",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"groupId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_in"].content = [
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_out"].content = [
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"autoGrant",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"autoGrant",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planDescription",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_out"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planDescription",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"form",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"pluginId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"templates",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"policyImpl",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"formType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_summary_PolicyFormType"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"formType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_summary_PolicyFormType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"pluginId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"templates",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"policyImpl",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"form",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_policies_PolicyType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"orderIndex",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"definition",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_policies_PolicyType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"definition",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"orderIndex",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"autoGrant",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"autoGrant",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_in"].content = [
	{
		"name":"label",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"count",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_out"].content = [
	{
		"name":"label",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"count",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"number",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"number",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageDataPoint_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numApps",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numMembers",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numServices",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numApps",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numMembers",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numServices",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"number",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"number",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_in"].content = [
	{
		"name":"serviceId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrgId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_out"].content = [
	{
		"name":"serviceId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrgId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"cloneVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"clone",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_out"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"cloneVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"clone",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_in"].content = [
	{
		"name":"serviceId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"apiKey",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"gatewayId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrgId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"httpEndpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrgName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_out"].content = [
	{
		"name":"serviceId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"apiKey",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"gatewayId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrgId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrgName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"httpEndpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_apps_ApplicationStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_apps_ApplicationStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_in"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_out"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__in"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__out"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"initialVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"initialVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_apps_ApplicationStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publishedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"application",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"retiredOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_out"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_apps_ApplicationStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publishedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"application",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"retiredOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organization",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organization",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"pluginId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"policyImpl",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"formType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_summary_PolicyFormType"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"formType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_summary_PolicyFormType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"pluginId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"policyImpl",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_in"].content = [
	{
		"name":"policies",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_out"].content = [
	{
		"name":"policies",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_in"].content = [
	{
		"name":"apis",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_out"].content = [
	{
		"name":"apis",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiEntryBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"ascending",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"ascending",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_OrderByBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_in"].content = [
	{
		"name":"serviceId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"apikey",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"contractId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appOrganizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceDescription",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appOrganizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrganizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrganizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_out"].content = [
	{
		"name":"apikey",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"contractId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appOrganizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrganizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appOrganizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceDescription",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceOrganizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"serviceName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"appVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_in"].content = [
	{
		"name":"total",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"failures",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"errors",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_out"].content = [
	{
		"name":"total",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"errors",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"failures",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_in"].content = [
	{
		"name":"username",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"fullName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"joinedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"admin",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_out"].content = [
	{
		"name":"username",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"fullName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"admin",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"joinedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in"].content = [
	{
		"name":"label",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"total",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"failures",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"errors",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out"].content = [
	{
		"name":"label",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"total",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"errors",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"failures",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_in"].content = [
	{
		"name":"managedEndpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_out"].content = [
	{
		"name":"managedEndpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"policyDefinitionId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"icon",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"policyDefinitionId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_in"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"what",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_audit_AuditEntryType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"who",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_audit_AuditEntityType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_out"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_audit_AuditEntityType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"what",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_audit_AuditEntryType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"who",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__in"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__out"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_in"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_out"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organization",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organization",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numContracts",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"numContracts",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_plans_PlanStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_plans_PlanStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"cloneVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"clone",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_out"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"cloneVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"clone",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_plans_PlanStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plan",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"lockedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_out"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_plans_PlanStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"lockedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plan",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_out"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_in"].content = [
	{
		"name":"language",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"template",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_out"].content = [
	{
		"name":"language",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"template",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionTemplateBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_in"].content = [
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"definitionId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_out"].content = [
	{
		"name":"configuration",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"definitionId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_in"].content = [
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"userId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_out"].content = [
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_PermissionBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"userId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_in"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_out"].content = [
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"classifier",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"groupId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"artifactId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"artifactId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"classifier",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"groupId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__in"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_audit_AuditEntryBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_out"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"planId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_in"].content = [
	{
		"name":"page",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"pageSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_out"].content = [
	{
		"name":"pageSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"page",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_PagingBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__in"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__out"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"initialVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"initialVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_in"].content = [
	{
		"name":"username",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"fullName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"joinedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"admin",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_out"].content = [
	{
		"name":"username",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"fullName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"admin",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"joinedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_in"].content = [
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_actions_ActionType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_out"].content = [
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_actions_ActionType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organizationId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"entityId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_in"].content = [
	{
		"name":"success",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"detail",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_out"].content = [
	{
		"name":"success",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"detail",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_in"].content = [
	{
		"name":"userId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"roleIds",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_out"].content = [
	{
		"name":"userId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"roleIds",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organization",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"organization",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"moreInfo",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"builtOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"up",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"up",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"builtOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"moreInfo",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__in"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__out"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__in"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__out"].content = [
	{
		"name":"beans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"totalSize",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"classifier",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"groupId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"artifactId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"artifactId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"classifier",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"groupId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_in"].content = [
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_ServiceStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_EndpointType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publicService",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publishedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"definitionType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_ServiceDefinitionType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointProperties",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"gateways",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"service",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"retiredOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"version",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"status",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_ServiceStatus"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"service",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publishedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_EndpointType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpointProperties",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"publicService",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"definitionType",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_services_ServiceDefinitionType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"modifiedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"retiredOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"endpoint",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plans",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServicePlanBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"gateways",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceGatewayBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_in"].content = [
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"fullName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_out"].content = [
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"fullName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"autoGrant",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"permissions",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_idm_PermissionType"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"autoGrant",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"boolean",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_in"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"apikey",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"application",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plan",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_in"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"service",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_in"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_out"].content = [
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"number",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"service",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"apikey",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"application",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_out"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdBy",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"createdOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"plan",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_out"],
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"id",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"type",
		"comment":null,
		"fullComment":null,
		"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_gateways_GatewayType"],
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_in"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"initialVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_out"].content = [
	{
		"name":"name",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"description",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"initialVersion",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_in"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsDataPoint_out"],
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_in"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"number",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_out"].content = [
	{
		"name":"data",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"map",
			"typeKey":{
				"type":"simple",
				"typeValue":"string",
			},
			"typeValue":{
				"type":"simple",
				"typeValue":"number",
			},
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_out"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_in"].content = [
	{
		"name":"userName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"roles",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_in"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"userId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"joinedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_in"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_in"].comment = null;
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_out"].content = [
	{
		"name":"userName",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"email",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"roles",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"collection",
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberRoleBean_out"],
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"userId",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"string",
		},
		"deprecated":false,
		"required":false,
	},
	{
		"name":"joinedOn",
		"comment":null,
		"fullComment":null,
		"typeValue":{
			"type":"simple",
			"typeValue":"date string",
		},
		"deprecated":false,
		"required":false,
	},
];
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_out"].ordered = "false";
com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_out"].comment = null;
com.qmino.miredot.restApiSource.interfaces = [
	{
		"beschrijving":"Use this endpoint to remove a Policy from the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies/{policyId}",
		"http":"DELETE",
		"title":"Remove Service Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Policy was successfully deleted.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Policy does not exist.",
			},
		],
		"hash":"-511489446",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new apiman role. A role consists of a set of permissions granted to a user when that user is given the role within the context of an organization.",
		"url":"/roles/",
		"http":"POST",
		"title":"Create Role",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"],
			"comment":"Full information about the created role.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the role is created successfully.",
			},
		],
		"hash":"601832090",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_NewRoleBean_in"],
					"comment":"The new role.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to delete a Service's definition document. When this is done, the \"definitionType\" field on the Service will be set to None.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/definition",
		"http":"DELETE",
		"title":"Remove Service Definition",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Service definition was successfully deleted.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-55507329",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a list of all Contracts for an Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts",
		"http":"GET",
		"title":"List All Contracts for an Application",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_out"],
			},
			"comment":"A list of Contracts.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Contracts is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application is not found.",
			},
		],
		"hash":"-373496865",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns a list of all policy definitions that have been added to apiman.",
		"url":"/policyDefs/",
		"http":"GET",
		"title":"List Policy Definitions",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out"],
			},
			"comment":"A list of policy definitions.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the policy definition list is successfully returned.",
			},
		],
		"hash":"1185461149",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to add a new Policy to the Plan version.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/policies",
		"http":"POST",
		"title":"Add Plan Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"],
			"comment":"Full details about the newly added Policy.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy is successfully added.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
		],
		"hash":"1055255023",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_in"],
					"comment":"Information about the new Policy.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to add a new Policy to the Service version.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies",
		"http":"POST",
		"title":"Add Service Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"],
			"comment":"Full details about the newly added Policy.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy is successfully added.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-1825158763",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_in"],
					"comment":"Information about the new Policy.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint simply returns the status of the apiman system. This is a useful endpoint to use when testing a client's connection to the apiman API Manager REST services.",
		"url":"/system/status",
		"http":"GET",
		"title":"Get System Status",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_system_SystemStatusBean_out"],
			"comment":"System status information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"On success.",
			},
		],
		"hash":"233771903",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Returns audit activity information for a single Organization. The audit information that is returned represents all of the activity associated with this Organization (i.e. an audit log for everything in the Organization).",
		"url":"/organizations/{organizationId}/activity",
		"http":"GET",
		"title":"Get Organization Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"List of audit/activity entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"644252897",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity results to return.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new version of the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions",
		"http":"POST",
		"title":"Create Service Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"],
			"comment":"Full details about the newly created Service version.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Service version is created successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
			{
				"httpCode":409,
				"comment":"If the Service version already exists.",
			},
		],
		"hash":"2037358525",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceVersionBean_in"],
					"comment":"Initial information about the new Service version.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update information about a Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}",
		"http":"PUT",
		"title":"Update Service",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Service is updated successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-657686413",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceBean_in"],
					"comment":"Updated Service information.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a list of all policy definitions contributed by the plugin.",
		"url":"/plugins/{pluginId}/policyDefs",
		"http":"GET",
		"title":"Get Plugin Policy Definitions",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicyDefinitionSummaryBean_out"],
			},
			"comment":"A list of policy definitions.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of policy definitions is returned successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the plugin does not exist.",
			},
		],
		"hash":"-867858951",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"pluginId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"the plugin id The plugin ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns the list of organizations that the user is a member of. The user is a member of an organization if she has at least one role for the org.",
		"url":"/users/{userId}/organizations",
		"http":"GET",
		"title":"List User Organizations",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"],
			},
			"comment":"List of organizations.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the organization list is successfully returned.",
			},
		],
		"hash":"1777337972",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update information about a single version of a Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}",
		"http":"PUT",
		"title":"Update Service Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"],
			"comment":"The updated Service Version.",
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Service version information was successfully updated.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"253720388",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_UpdateServiceVersionBean_in"],
					"comment":"Updated information about the Service version.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new Service. Note that it is important to also create an initial version of the Service (e.g. 1.0). This can either be done by including the 'initialVersion' property in the request, or by immediately following up with a call to \"Create Service Version\". If the former is done, then a first Service version will be created automatically by this endpoint.",
		"url":"/organizations/{organizationId}/services",
		"http":"POST",
		"title":"Create Service",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_out"],
			"comment":"Full details about the newly created Service.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Service is successfully created.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"711804598",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_NewServiceBean_in"],
					"comment":"Information about the new Service.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return request count data broken down by plan. It basically answers the question \"which service plans are most used?\".",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/planUsage",
		"http":"GET",
		"title":"Get Service Usage Metrics (per Plan)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerPlanBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"942613575",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns audit activity information about the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/activity",
		"http":"GET",
		"title":"Get Service Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"A list of audit activity entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"1628759461",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity should be returned.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a list of all Services in the Organization.",
		"url":"/organizations/{organizationId}/services",
		"http":"GET",
		"title":"List Services",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"],
			},
			"comment":"A list of Services.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Services is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"-369889394",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update information about a Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}",
		"http":"PUT",
		"title":"Update Plan",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Plan is updated successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist. when trying to get, update, or delete an plan that does not exist",
			},
		],
		"hash":"-336207765",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_UpdatePlanBean_in"],
					"comment":"Updated Plan information.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to change the order of Policies for an Application. When a Policy is added to the Application, it is added as the last Policy in the list of Application Policies. Sometimes the order of Policies is important, so it is often useful to re-order the Policies by invoking this endpoint. The body of the request should include all of the Policies for the Application, in the new desired order. Note that only the IDs of each of the Policies is actually required in the request, at a minimum.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/reorderPolicies",
		"http":"POST",
		"title":"Re-Order Application Policies",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the re-ordering of Policies was successful.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"-2110254466",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_in"],
					"comment":"The Policies in the desired order.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns a list of all the organizations for which the current user has permission to edit services. For example, when creating a new Service, the user interface must ask the user to choose within which Organization to create it. This endpoint lists the valid choices for the current user.",
		"url":"/currentuser/svcorgs",
		"http":"GET",
		"title":"Get Organizations (svc-edit)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"],
			},
			"comment":"A list of organizations.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the organizations are successfully returned.",
			},
		],
		"hash":"-368594885",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint allows updating information about the authenticated user.",
		"url":"/currentuser/info",
		"http":"PUT",
		"title":"Update Current User Information",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the update is successful.",
			},
		],
		"hash":"1076186977",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_in"],
					"comment":"Data to use when updating the user.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve information about a single Service by ID. Note that this only returns information about the Service, not about any particular *version* of the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}",
		"http":"GET",
		"title":"Get Service By ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceBean_out"],
			"comment":"A Service.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Service is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"593492118",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list the Plans configured for the given Service version.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/plans",
		"http":"GET",
		"title":"List Service Plans",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServicePlanSummaryBean_out"],
			},
			"comment":"A list of Service plans.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Service plans are successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service cannot be found.",
			},
		],
		"hash":"2124295565",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns all of the permissions assigned to the currently authenticated user.",
		"url":"/permissions/",
		"http":"GET",
		"title":"Get Current User's Permissions",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_out"],
			"comment":"All of the user's permissions.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the permissions are successfully retrieved.",
			},
		],
		"hash":"-133467057",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to break a Contract with a Service.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts/{contractId}",
		"http":"DELETE",
		"title":"Break Contract",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Contract is successfully broken.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Contract does not exist.",
			},
		],
		"hash":"265482217",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
				{
					"name":"contractId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Contract ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve information about a single Plan by ID. Note that this only returns information about the Plan, not about any particular *version* of the Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}",
		"http":"GET",
		"title":"Get Plan By ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_out"],
			"comment":"An Plan. when trying to get, update, or delete an plan that does not exist",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Plan is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
		],
		"hash":"-246606276",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns a list of all the Gateways that have been configured.",
		"url":"/gateways/",
		"http":"GET",
		"title":"List All Gateways",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewaySummaryBean_out"],
			},
			"comment":"A list of configured Gateways.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the gateways are successfully returned.",
			},
		],
		"hash":"623738724",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve information about a single Role by its ID.",
		"url":"/roles/{roleId}",
		"http":"GET",
		"title":"Get a Role by ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"],
			"comment":"A role.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the role is returned successfully.",
			},
		],
		"hash":"-58217493",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"roleId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The role ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific application. This will return request count data broken down by service. It basically answers the question \"which services is my app really using?\".",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/metrics/serviceUsage",
		"http":"GET",
		"title":"Get App Usage Metrics (per Service)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_AppUsagePerServiceBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"-551412358",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the Services the current user has permission to edit. This includes all Services from all Organizations the user has service edit privileges for.",
		"url":"/currentuser/services",
		"http":"GET",
		"title":"Get Current User's Services",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"],
			},
			"comment":"A list of Services.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the services are successfully returned.",
			},
		],
		"hash":"1682950062",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns a list of all the organizations for which the current user has permission to edit plans. For example, when creating a new Plan, the user interface must ask the user to choose within which Organization to create it. This endpoint lists the valid choices for the current user.",
		"url":"/currentuser/planorgs",
		"http":"GET",
		"title":"Get Organizations (plan-edit)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"],
			},
			"comment":"A list of organizations.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the organizations are successfully returned.",
			},
		],
		"hash":"-1053226073",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about the user's audit history. This returns audit entries corresponding to each of the actions taken by the user. For example, when a user creates a new Organization, an audit entry is recorded and would be included in the result of this endpoint.",
		"url":"/users/{userId}/activity",
		"http":"GET",
		"title":"Get User Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"List of audit entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the activity is successfully returned.",
			},
		],
		"hash":"758808965",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The page of the results to return.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of results per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new Application. Note that it is important to also create an initial version of the Application (e.g. 1.0). This can either be done by including the 'initialVersion' property in the request, or by immediately following up with a call to \"Create Application Version\". If the former is done, then a first Application version will be created automatically by this endpoint.",
		"url":"/organizations/{organizationId}/applications",
		"http":"POST",
		"title":"Create Application",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_out"],
			"comment":"Full details about the newly created Application.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Application is successfully created.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"-1408103619",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationBean_in"],
					"comment":"Information about the new Application.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Revoke all of a user's role memberships from the org.",
		"url":"/organizations/{organizationId}/members/{userId}",
		"http":"DELETE",
		"title":"Revoke All Memberships",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the user's memberships were successfully revoked.",
			},
			{
				"httpCode":404,
				"comment":"If the user does not exist.",
			},
		],
		"hash":"52438808",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about a single Policy in the Plan version.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/policies/{policyId}",
		"http":"GET",
		"title":"Get Plan Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"],
			"comment":"Full information about the Policy.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
		],
		"hash":"-136334993",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve the Service's definition document. A service definition document can be several different types, depending on the Service type and technology used to define the service. For example, this endpoint might return a WSDL document, or a Swagger JSON document.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/definition",
		"http":"GET",
		"title":"Get Service Definition",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
			"application/wsdl+xml",
			"application/x-yaml",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"simple",
				"typeValue":"javax.ws.rs.core.Response",
			},
			"comment":"The Service Definition document (e.g. a Swagger JSON file).",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Service definition is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service version does not exist.",
			},
		],
		"hash":"-1444301970",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a list of all Applications in the Organization.",
		"url":"/organizations/{organizationId}/applications",
		"http":"GET",
		"title":"List Applications",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"],
			},
			"comment":"A list of Applications.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Applications is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"1791893282",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Revoke membership in a role.",
		"url":"/organizations/{organizationId}/roles/{roleId}/{userId}",
		"http":"DELETE",
		"title":"Revoke Single Membership",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the membership was successfully revoked.",
			},
		],
		"hash":"1374696322",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"roleId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The role ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to remove a Policy from the Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/policies/{policyId}",
		"http":"DELETE",
		"title":"Remove Plan Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Policy was successfully deleted.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Policy does not exist.",
			},
		],
		"hash":"-1588944898",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns a list of all plugins that have been added to the system.",
		"url":"/plugins/",
		"http":"GET",
		"title":"List All Plugins",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PluginSummaryBean_out"],
			},
			"comment":"A list of plugins.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of plugins is successfully returned.",
			},
		],
		"hash":"1273095339",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the Policies configured for the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies",
		"http":"GET",
		"title":"List All Service Policies",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"],
			},
			"comment":"A List of Policies.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Policies is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"927046441",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to remove a Policy from the Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies/{policyId}",
		"http":"DELETE",
		"title":"Remove Application Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Policy was successfully deleted.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Policy does not exist.",
			},
		],
		"hash":"-675179834",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about the currently authenticated user.",
		"url":"/currentuser/info",
		"http":"GET",
		"title":"Get Current User Information",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_CurrentUserBean_out"],
			"comment":"Information about the authenticated user.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the information is correctly returned.",
			},
		],
		"hash":"1953252350",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a list of all Plans in the Organization.",
		"url":"/organizations/{organizationId}/plans",
		"http":"GET",
		"title":"List Plans",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanSummaryBean_out"],
			},
			"comment":"A list of Plans.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Plans is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"211026916",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return request count data broken down by application. It basically answers the question \"who is calling my service?\".",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/appUsage",
		"http":"GET",
		"title":"Get Service Usage Metrics (per App)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsagePerAppBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"-996828075",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the Policies configured for the Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/policies",
		"http":"GET",
		"title":"List All Plan Policies",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"],
			},
			"comment":"A List of Policies.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Policies is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
		],
		"hash":"-75369965",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update the meta-data or configuration of a single Service Policy.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies/{policyId}",
		"http":"PUT",
		"title":"Update Service Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Policy was successfully updated.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Policy does not exist.",
			},
		],
		"hash":"1193306311",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_in"],
					"comment":"New meta-data and/or configuration for the Policy.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return a full histogram of response statistics data based on the provided date range and interval. Valid intervals are: month, week, day, hour, minute The data returned includes total request counts, failure counts, and error counts for each data point in the histogram.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/responseStats",
		"http":"GET",
		"title":"Get Service Response Statistics (Histogram)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsHistogramBean_out"],
			"comment":"Response statistics metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"1123438697",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"interval",
					"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_metrics_HistogramIntervalType"],
					"comment":"A valid interval (month, week, day, hour, minute)",
					"jaxrs":"QUERY",
				},
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about a single Policy in the Application version.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies/{policyId}",
		"http":"GET",
		"title":"Get Application Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"],
			"comment":"Full information about the Policy.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"-1736700107",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to search for organizations. The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
		"url":"/search/organizations",
		"http":"POST",
		"title":"Search for Organizations",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_OrganizationSummaryBean__out"],
			"comment":"The search results (a page of organizations).",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the search is successful.",
			},
		],
		"hash":"-1330388304",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"],
					"comment":"The search criteria.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the versions of a Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions",
		"http":"GET",
		"title":"List Service Versions",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionSummaryBean_out"],
			},
			"comment":"A list of Services.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Service versions is successfully returned.",
			},
		],
		"hash":"1143148047",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to break all contracts between this application and its services.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts",
		"http":"DELETE",
		"title":"Break All Contracts",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the operation is successful.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"-2017982009",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint can be used to access the full information about an apiman plugin. The plugin is retrieved using the ID it was given when it was added. The ID information can be retrieved by listing all plugins or remembered when a plugin is first added.",
		"url":"/plugins/{pluginId}",
		"http":"GET",
		"title":"Get Plugin by ID",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_out"],
			"comment":"An apiman plugin.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the plugin exists and is returned.",
			},
		],
		"hash":"805219257",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"pluginId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"the plugin id",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint lists all of the roles currently defined in apiman.",
		"url":"/roles/",
		"http":"GET",
		"title":"List all Roles",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_RoleBean_out"],
			},
			"comment":"A list of roles.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the role list is returned successfully.",
			},
		],
		"hash":"589907054",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about a specific user by the User ID.",
		"url":"/users/{userId}",
		"http":"GET",
		"title":"Get User by ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserBean_out"],
			"comment":"Full user information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the user exists and information is returned.",
			},
		],
		"hash":"1466094454",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update the information about a user. This will fail unless the authenticated user is an admin or identical to the user being updated.",
		"url":"/users/{userId}",
		"http":"PUT",
		"title":"Update a User by ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the user information is successfully updated.",
			},
		],
		"hash":"1105661559",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateUserBean_in"],
					"comment":"Updated user information.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new version of the Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions",
		"http":"POST",
		"title":"Create Application Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_out"],
			"comment":"Full details about the newly created Application version.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Application version is created successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
			{
				"httpCode":409,
				"comment":"If the Application version already exists.",
			},
		],
		"hash":"1740739630",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_NewApplicationVersionBean_in"],
					"comment":"Initial information about the new Application version.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about a single Policy in the Service version.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies/{policyId}",
		"http":"GET",
		"title":"Get Service Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"],
			"comment":"Full information about the Policy.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-1900284087",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint is used to test the Gateway's settings prior to either creating or updating it. The information will be used to attempt to create a link between the API Manager and the Gateway, by simply trying to ping the Gateway's \"status\" endpoint.",
		"url":"/gateways/",
		"http":"PUT",
		"title":"Test a Gateway",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_GatewayTestResultBean_out"],
			"comment":"The result of testing the Gateway settings.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the test is performed (regardless of the outcome of the test).",
			},
		],
		"hash":"-1341658164",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_in"],
					"comment":"Details of the Gateway for testing.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to change the order of Policies for a Plan. When a Policy is added to the Plan, it is added as the last Policy in the list of Plan Policies. Sometimes the order of Policies is important, so it is often useful to re-order the Policies by invoking this endpoint. The body of the request should include all of the Policies for the Plan, in the new desired order. Note that only the IDs of each of the Policies is actually required in the request, at a minimum.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/reorderPolicies",
		"http":"POST",
		"title":"Re-Order Plan Policies",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the re-ordering of Policies was successful.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
		],
		"hash":"-1349655703",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_in"],
					"comment":"The Policies in the desired order.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve the form associated with a particular policy definition. Plugins may contribute policy definitions to apiman. Part of that contribution *may* include a form for the UI to display when configuring an instance of the policy. This endpoint returns this form.",
		"url":"/plugins/{pluginId}/policyDefs/{policyDefId}/form",
		"http":"GET",
		"title":"Get Plugin Policy Form",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"simple",
				"typeValue":"string",
			},
			"comment":"A policy configuration form.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the form is returned successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the plugin does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the policy definition does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the form does not exist.",
			},
		],
		"hash":"-393357420",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"pluginId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"the plugin id The plugin ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyDefId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The policy definition ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint deletes a Gateway by its unique ID.",
		"url":"/gateways/{gatewayId}",
		"http":"DELETE",
		"title":"Delete a Gateway",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the delete is successful.",
			},
		],
		"hash":"1415376726",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"gatewayId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The ID of the Gateway to delete.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Grant membership in a role to a user.",
		"url":"/organizations/{organizationId}/roles",
		"http":"POST",
		"title":"Grant Membership(s)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the membership(s) were successfully granted.",
			},
		],
		"hash":"1016258949",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_GrantRolesBean_in"],
					"comment":"Roles to grant, and the ID of the user.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return response type statistics broken down by application.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/appResponseStats",
		"http":"GET",
		"title":"Get Service Response Statistics (per App)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerAppBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"1755493586",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns all applications that the user has permission to edit.",
		"url":"/users/{userId}/applications",
		"http":"GET",
		"title":"List User Applications",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"],
			},
			"comment":"List of applications.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the application list is successfully returned.",
			},
		],
		"hash":"-602024647",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the Policies configured for the Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies",
		"http":"GET",
		"title":"List All Application Policies",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PolicySummaryBean_out"],
			},
			"comment":"A List of Policies.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Policies is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"-1313878763",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Update the meta information about a policy definition.",
		"url":"/policyDefs/{policyDefinitionId}",
		"http":"PUT",
		"title":"Update Policy Definition",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the update was successful.",
			},
		],
		"hash":"-566011861",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"policyDefinitionId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The policy definition ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyDefinitionBean_in"],
					"comment":"New meta-data for the policy definition.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update the Service's definition document. A service definition will vary depending on the type of service, and the type of definition used. For example, it might be a Swagger document or a WSDL file. To use this endpoint, simply PUT the updated Service Definition document in its entirety, making sure to set the Content-Type appropriately for the type of definition document. The content will be stored and the Service's \"Definition Type\" field will be updated. <br /> Whenever a service's definition is updated, the \"definitionType\" property of that service is automatically set based on the request Content-Type. There is no other way to set the service's definition type property. The following is a map of Content-Type to service definition type. <table> <thead> <tr><th>Content Type</th><th>Service Definition Type</th></tr> </thead> <tbody> <tr><td>application/json</td><td>SwaggerJSON</td></tr> <tr><td>application/x-yaml</td><td>SwaggerYAML</td></tr> <tr><td>application/wsdl+xml</td><td>WSDL</td></tr> </tbody> </table>",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/definition",
		"http":"PUT",
		"title":"Update Service Definition",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Service definition was successfully updated.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-2013812959",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update the meta-data or configuration of a single Plan Policy.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/policies/{policyId}",
		"http":"PUT",
		"title":"Update Plan Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Policy was successfully updated.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Policy does not exist.",
			},
		],
		"hash":"969003111",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_in"],
					"comment":"New meta-data and/or configuration for the Policy.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about a single Organization by its ID.",
		"url":"/organizations/{organizationId}",
		"http":"GET",
		"title":"Get Organization By ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"],
			"comment":"The Organization.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Organization was successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"-1820549874",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization id.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new Organization.",
		"url":"/organizations/",
		"http":"POST",
		"title":"Create Organization",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_OrganizationBean_out"],
			"comment":"Full details about the Organization that was created.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Organization was successfully created.",
			},
		],
		"hash":"-675432518",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_NewOrganizationBean_in"],
					"comment":"Information about the new Organization.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the versions of a Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions",
		"http":"GET",
		"title":"List Plan Versions",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_PlanVersionSummaryBean_out"],
			},
			"comment":"A list of Plans. when trying to get, update, or delete an plan that does not exist",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Plan versions is successfully returned.",
			},
		],
		"hash":"-181241607",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to add a new Policy to the Application version.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies",
		"http":"POST",
		"title":"Add Application Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyBean_out"],
			"comment":"Full details about the newly added Policy.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy is successfully added.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"891448105",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_NewPolicyBean_in"],
					"comment":"Information about the new Policy.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return response type statistics broken down by plan.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/planResponseStats",
		"http":"GET",
		"title":"Get Service Response Statistics (per Plan)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsPerPlanBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"365239146",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint provides a way to search for roles. The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
		"url":"/roles/search",
		"http":"POST",
		"title":"Search for Roles",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_RoleBean__out"],
			"comment":"The search results (a page of roles).",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the search completes successfully.",
			},
		],
		"hash":"-1965772529",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"],
					"comment":"The search criteria.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a Policy Chain for the specific Service version. A Policy Chain is a useful summary to better understand which Policies would be executed for a request to this Service through a particular Plan offered by the Service. Often this information is interesting prior to create a Contract with the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/plans/{planId}/policyChain",
		"http":"GET",
		"title":"Get Service Policy Chain",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_out"],
			"comment":"A Policy Chain.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Policy Chain is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-126836521",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint is called to create a new Gateway.",
		"url":"/gateways/",
		"http":"POST",
		"title":"Create a Gateway",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_out"],
			"comment":"The newly created Gateway.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Gateway is created successfully.",
			},
		],
		"hash":"-1101902538",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_NewGatewayBean_in"],
					"comment":"The details of the new Gateway.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get audit activity information for a single version of the Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/activity",
		"http":"GET",
		"title":"Get Application Version Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"A list of audit entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit activity entries are successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application version does not exist.",
			},
		],
		"hash":"-353746306",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity data to return.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to add a policy definition to apiman. The policy definition can optionall include the 'id' property. If no 'id' is supplied, one will be generated based on the name.",
		"url":"/policyDefs/",
		"http":"POST",
		"title":"Add Policy Definition",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out"],
			"comment":"Details about the policy definition that was added.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the policy definition is added successfully.",
			},
		],
		"hash":"-1860241840",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_in"],
					"comment":"The policy definition to add.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns audit activity information about the Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/activity",
		"http":"GET",
		"title":"Get Plan Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"A list of audit activity entries. when trying to get, update, or delete an plan that does not exist",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
		],
		"hash":"-342742837",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity should be returned.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Updates meta-information about a single Organization.",
		"url":"/organizations/{organizationId}",
		"http":"PUT",
		"title":"Update Organization By ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Organization meta-data is successfully updated.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"-38162105",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_orgs_UpdateOrganizationBean_in"],
					"comment":"Updated Organization information.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update the meta-data or configuration of a single Application Policy.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies/{policyId}",
		"http":"PUT",
		"title":"Update Application Policy",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Policy was successfully updated.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Policy does not exist.",
			},
		],
		"hash":"-13370829",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
				{
					"name":"policyId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The Policy ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_UpdatePolicyBean_in"],
					"comment":"New meta-data and/or configuration for the Policy.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to add a plugin to apiman. A plugin consists of the maven coordinates of an artifact deployed to a remote maven repository (e.g. maven central).",
		"url":"/plugins/",
		"http":"POST",
		"title":"Add a Plugin",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_PluginBean_out"],
			"comment":"Full details about the plugin that was added.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the plugin was added successfully.",
			},
		],
		"hash":"-1845183494",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plugins_NewPluginBean_in"],
					"comment":"The plugin to add.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new Plan. Note that it is important to also create an initial version of the Plan (e.g. 1.0). This can either be done by including the 'initialVersion' property in the request, or by immediately following up with a call to \"Create Plan Version\". If the former is done, then a first Plan version will be created automatically by this endpoint.",
		"url":"/organizations/{organizationId}/plans",
		"http":"POST",
		"title":"Create Plan",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanBean_out"],
			"comment":"Full details about the newly created Plan.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Plan is successfully created.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
		],
		"hash":"355787714",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanBean_in"],
					"comment":"Information about the new Plan.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns a list of all the organizations for which the current user has permission to edit applications. For example, when creating a new Application, the user interface must ask the user to choose within which Organization to create it. This endpoint lists the valid choices for the current user.",
		"url":"/currentuser/apporgs",
		"http":"GET",
		"title":"Get Organizations (app-edit)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_OrganizationSummaryBean_out"],
			},
			"comment":"A list of organizations.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the organizations are successfully returned.",
			},
		],
		"hash":"-468052913",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get information about the Managed Service's gateway endpoint. In other words, this returns the actual live endpoint on the API Gateway - the endpoint that a client should use when invoking the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/endpoint",
		"http":"GET",
		"title":"Get Service Endpoint",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceVersionEndpointSummaryBean_out"],
			"comment":"The live Service endpoint information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the endpoint information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"290755230",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update the information about an existing role. The role is identified by its ID.",
		"url":"/roles/{roleId}",
		"http":"PUT",
		"title":"Update a Role by ID",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the role is updated successfully.",
			},
		],
		"hash":"-155724339",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"roleId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The role ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UpdateRoleBean_in"],
					"comment":"Updated role information.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a new version of the Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions",
		"http":"POST",
		"title":"Create Plan Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_out"],
			"comment":"Full details about the newly created Plan version. when trying to get, update, or delete an plan that does not exist",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Plan version is created successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan does not exist.",
			},
			{
				"httpCode":409,
				"comment":"If the Plan version already exists.",
			},
		],
		"hash":"-1189204529",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_NewPlanVersionBean_in"],
					"comment":"Initial information about the new Plan version.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to search for users. The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
		"url":"/users/search",
		"http":"POST",
		"title":"Search for Users",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_idm_UserBean__out"],
			"comment":"The search results (a page of organizations).",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the search is successful.",
			},
		],
		"hash":"990611556",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"],
					"comment":"The search criteria.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to search for services. The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
		"url":"/search/services",
		"http":"POST",
		"title":"Search for Services",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ServiceSummaryBean__out"],
			"comment":"The search results (a page of services).",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the search is successful.",
			},
		],
		"hash":"644020799",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"],
					"comment":"The search criteria.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get audit activity information for a single version of the Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}/activity",
		"http":"GET",
		"title":"Get Plan Version Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"A list of audit entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit activity entries are successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan version does not exist.",
			},
		],
		"hash":"1217189892",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity data to return.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Call this endpoint to delete a plugin.",
		"url":"/plugins/{pluginId}",
		"http":"DELETE",
		"title":"Delete a Plugin by ID",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the plugin was deleted successfully.",
			},
		],
		"hash":"-925476280",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"pluginId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"the plugin id The plugin's ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns all services that the user has permission to edit.",
		"url":"/users/{userId}/services",
		"http":"GET",
		"title":"List User Services",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ServiceSummaryBean_out"],
			},
			"comment":"List of services.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the service list is successfully returned.",
			},
		],
		"hash":"-935073036",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve detailed information about a single Service Contract for an Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts/{contractId}",
		"http":"GET",
		"title":"Get Service Contract",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_out"],
			"comment":"Details about a single Contract.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Contract is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application version does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Contract is not found.",
			},
		],
		"hash":"-17039270",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
				{
					"name":"contractId",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The ID of the Contract.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to search for applications. The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
		"url":"/search/applications",
		"http":"POST",
		"title":"Search for Applications",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_summary_ApplicationSummaryBean__out"],
			"comment":"The search results (a page of applications).",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the search is successful.",
			},
		],
		"hash":"1625443411",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchCriteriaBean_in"],
					"comment":"The search criteria.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Call this endpoint in order to execute actions for apiman entities such as Plans, Services, or Applications. The type of the action must be included in the request payload.",
		"url":"/actions/",
		"http":"POST",
		"title":"Execute an Entity Action",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the action completes successfully.",
			},
		],
		"hash":"-1326787891",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_actions_ActionBean_in"],
					"comment":"The details about what action to execute.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return a full histogram of request count data based on the provided date range and interval. Valid intervals are: month, week, day, hour, minute",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/usage",
		"http":"GET",
		"title":"Get Service Usage Metrics",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_UsageHistogramBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"1369248390",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"interval",
					"typeValue":com.qmino.miredot.restApiSource.enums["io_apiman_manager_api_beans_metrics_HistogramIntervalType"],
					"comment":"A valid interval (month, week, day, hour, minute)",
					"jaxrs":"QUERY",
				},
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a list of all Contracts created with this Service. This will return Contracts created by between any Application and through any Plan.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/contracts",
		"http":"GET",
		"title":"List Service Contracts",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ContractSummaryBean_out"],
			},
			"comment":"A list of Contracts.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Contracts is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-1670053020",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of Contracts to return.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of Contracts per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to create a Contract between the Application and a Service. In order to create a Contract, the caller must specify the Organization, ID, and Version of the Service. Additionally the caller must specify the ID of the Plan it wished to use for the Contract with the Service.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts",
		"http":"POST",
		"title":"Create a Service Contract",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_ContractBean_out"],
			"comment":"Full details about the newly created Contract.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Contract is successfully created.",
			},
			{
				"httpCode":404,
				"comment":"If the Application version does not exist.",
			},
		],
		"hash":"-1561085416",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_contracts_NewContractBean_in"],
					"comment":"Required information about the new Contract.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to retrieve information about a single Application by ID. Note that this only returns information about the Application, not about any particular *version* of the Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}",
		"http":"GET",
		"title":"Get Application By ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationBean_out"],
			"comment":"An Application.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Application is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"1743265666",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns audit activity information about the Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/activity",
		"http":"GET",
		"title":"Get Application Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"A list of audit activity entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Organization does not exist.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"2141749137",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity should be returned.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the versions of an Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions",
		"http":"GET",
		"title":"List Application Versions",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationVersionSummaryBean_out"],
			},
			"comment":"A list of Applications.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of Application versions is successfully returned.",
			},
		],
		"hash":"1747621883",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to delete a role by its ID.",
		"url":"/roles/{roleId}",
		"http":"DELETE",
		"title":"Delete a Role by ID",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the role is deleted.",
			},
		],
		"hash":"259605984",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"roleId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The role ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get detailed information about a single version of an Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}",
		"http":"GET",
		"title":"Get Application Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_ApplicationVersionBean_out"],
			"comment":"An Application version.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Application version is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application version does not exist.",
			},
		],
		"hash":"813751855",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Call this endpoint to get the details of a single configured Gateway.",
		"url":"/gateways/{gatewayId}",
		"http":"GET",
		"title":"Get a Gateway by ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_GatewayBean_out"],
			"comment":"The Gateway identified by {gatewayId}",
		},
		"statusCodes":[
		],
		"hash":"7562805",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"gatewayId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The ID of the Gateway to get.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"This endpoint returns all of the permissions assigned to a specific user.",
		"url":"/permissions/{userId}",
		"http":"GET",
		"title":"Get User's Permissions",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_idm_UserPermissionsBean_out"],
			"comment":"All of the user's permissions.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the permissions are successfully retrieved.",
			},
		],
		"hash":"1737627941",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"userId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The user's ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get registry style information about all Services that this Application consumes. This is a useful endpoint to invoke in order to retrieve a summary of every Service consumed by the application. The information returned by this endpoint could potentially be included directly in a client application as a way to lookup endpoint information for the APIs it wishes to consume. This variant of the API Registry is formatted as JSON data.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/apiregistry/json",
		"http":"GET",
		"title":"Get API Registry (JSON)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_out"],
			"comment":"API Registry information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the API Registry information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"1212407589",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get detailed information about a single version of a Plan.",
		"url":"/organizations/{organizationId}/plans/{planId}/versions/{version}",
		"http":"GET",
		"title":"Get Plan Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_plans_PlanVersionBean_out"],
			"comment":"An Plan version.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Plan version is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Plan version does not exist.",
			},
		],
		"hash":"-284625355",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"planId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Plan version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to list all of the Applications the current user has permission to edit. This includes all Applications from all Organizations the user has application edit privileges for.",
		"url":"/currentuser/applications",
		"http":"GET",
		"title":"Get Current User's Applications",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApplicationSummaryBean_out"],
			},
			"comment":"A list of Applications.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the applications are successfully returned.",
			},
		],
		"hash":"-1003801485",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get detailed information about a single version of a Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}",
		"http":"GET",
		"title":"Get Service Version",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_services_ServiceVersionBean_out"],
			"comment":"A Service version.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the Service version is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service version does not exist.",
			},
		],
		"hash":"-2124149093",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Lists all members of the organization.",
		"url":"/organizations/{organizationId}/members",
		"http":"GET",
		"title":"List Organization Members",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":{
				"type":"collection",
				"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_members_MemberBean_out"],
			},
			"comment":"List of members.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the list of members is returned successfully.",
			},
		],
		"hash":"-1012710573",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Retrieves metrics/analytics information for a specific service. This will return total response type statistics over the given date range. Basically this will return three numbers: total request, # failed responses, # error responses.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/summaryResponseStats",
		"http":"GET",
		"title":"Get Service Response Statistics (Summary)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_metrics_ResponseStatsSummaryBean_out"],
			"comment":"Usage metrics information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the metrics data is successfully returned.",
			},
		],
		"hash":"-664114902",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"from",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The start of a valid date range.",
					"jaxrs":"QUERY",
				},
				{
					"name":"to",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The end of a valid date range.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get audit activity information for a single version of the Service.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/activity",
		"http":"GET",
		"title":"Get Service Version Activity",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_search_SearchResultsBean_io_apiman_manager_api_beans_audit_AuditEntryBean__out"],
			"comment":"A list of audit entries.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the audit activity entries are successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Service version does not exist.",
			},
		],
		"hash":"2131379690",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
				{
					"name":"page",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"Which page of activity data to return.",
					"jaxrs":"QUERY",
				},
				{
					"name":"count",
					"typeValue":{
						"type":"simple",
						"typeValue":"number",
					},
					"comment":"The number of entries per page to return.",
					"jaxrs":"QUERY",
				},
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get a single policy definition by its ID.",
		"url":"/policyDefs/{policyDefinitionId}",
		"http":"GET",
		"title":"Get Policy Definition by ID",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyDefinitionBean_out"],
			"comment":"A policy definition if found.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the policy definition is returned successfully.",
			},
		],
		"hash":"874780892",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"policyDefinitionId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The ID of the policy definition.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to change the order of Policies for a Service. When a Policy is added to the Service, it is added as the last Policy in the list of Service Policies. Sometimes the order of Policies is important, so it is often useful to re-order the Policies by invoking this endpoint. The body of the request should include all of the Policies for the Service, in the new desired order. Note that only the IDs of each of the Policies is actually required in the request, at a minimum.",
		"url":"/organizations/{organizationId}/services/{serviceId}/versions/{version}/reorderPolicies",
		"http":"POST",
		"title":"Re-Order Service Policies",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the re-ordering of Policies was successful.",
			},
			{
				"httpCode":404,
				"comment":"If the Service does not exist.",
			},
		],
		"hash":"-1829604231",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"serviceId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Service version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_policies_PolicyChainBean_in"],
					"comment":"The Policies in the desired order.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to delete a policy definition by its ID. If the policy definition was added automatically from an installed plugin, this will fail. The only way to remove such policy definitions is to remove the plugin.",
		"url":"/policyDefs/{policyDefinitionId}",
		"http":"DELETE",
		"title":"Delete policy definition.",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the policy definition is successfully deleted.",
			},
		],
		"hash":"-1813846193",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"policyDefinitionId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The policy definition ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to get registry style information about all Services that this Application consumes. This is a useful endpoint to invoke in order to retrieve a summary of every Service consumed by the application. The information returned by this endpoint could potentially be included directly in a client application as a way to lookup endpoint information for the APIs it wishes to consume. This variant of the API Registry is formatted as XML data.",
		"url":"/organizations/{organizationId}/applications/{applicationId}/versions/{version}/apiregistry/xml",
		"http":"GET",
		"title":"Get API Registry (XML)",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
		],
		"produces":[
			"application/xml",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
			"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_summary_ApiRegistryBean_out"],
			"comment":"API Registry information.",
		},
		"statusCodes":[
			{
				"httpCode":200,
				"comment":"If the API Registry information is successfully returned.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"-1274908584",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"version",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application version.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update an existing Gateway. Note that the name of the Gateway cannot be changed, as the name is tied closely with the Gateway's ID. If you wish to rename the Gateway you must delete it and create a new one.",
		"url":"/gateways/{gatewayId}",
		"http":"PUT",
		"title":"Update a Gateway",
		"tags":[
			"admin",
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the update is successful.",
			},
		],
		"hash":"1350378359",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"gatewayId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The ID of the Gateway to update.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_gateways_UpdateGatewayBean_in"],
					"comment":"The Gateway information to update. All fields are optional.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
	{
		"beschrijving":"Use this endpoint to update information about an Application.",
		"url":"/organizations/{organizationId}/applications/{applicationId}",
		"http":"PUT",
		"title":"Update Application",
		"tags":[
			
		],
		"authors":[
			"eric.wittmann@redhat.com",
		],
		"compressed":false,
		"deprecated":false,
		"consumes":[
			"application/json",
		],
		"produces":[
			"application/json",
		],
		"roles":[
		],
		"rolesAllowed":null,
		"permitAll":false,
		"output":{
		},
		"statusCodes":[
			{
				"httpCode":204,
				"comment":"If the Application is updated successfully.",
			},
			{
				"httpCode":404,
				"comment":"If the Application does not exist.",
			},
		],
		"hash":"-173738590",
		"responseHeaders":{
			"headers":[
			],
			"customHeaders":[
			],
		},
		"inputs":{
			"PATH":[
				{
					"name":"organizationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Organization ID.",
					"jaxrs":"PATH",
				},
				{
					"name":"applicationId",
					"typeValue":{
						"type":"simple",
						"typeValue":"string",
					},
					"comment":"The Application ID.",
					"jaxrs":"PATH",
				},
			],
			"QUERY":[
			],
			"BODY":[
				{
					"typeValue":com.qmino.miredot.restApiSource.tos["io_apiman_manager_api_beans_apps_UpdateApplicationBean_in"],
					"comment":"Updated Application information.",
					"jaxrs":"BODY",
				},
			],
			"HEADER":[
			],
			"COOKIE":[
			],
			"FORM":[
			],
			"MATRIX":[
			],
		},
	},
];
com.qmino.miredot.projectWarnings = [
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-511489446",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-511489446",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-511489446",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-511489446",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"601832090",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"601832090",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-55507329",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-55507329",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-55507329",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-373496865",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApplicationVersionContracts",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-373496865",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApplicationVersionContracts",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1185461149",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"list",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1055255023",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1055255023",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1055255023",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1825158763",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1825158763",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1825158763",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"644252897",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"activity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"644252897",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"activity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"2037358525",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2037358525",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidVersionException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2037358525",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2037358525",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2037358525",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-657686413",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-657686413",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-867858951",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"getPolicyDefs",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"253720388",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"253720388",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidServiceStatusException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"253720388",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"711804598",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"711804598",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"711804598",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidNameException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"711804598",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"942613575",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsagePerPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"942613575",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsagePerPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"942613575",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsagePerPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1628759461",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1628759461",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-369889394",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServices",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-369889394",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServices",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-336207765",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updatePlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-336207765",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updatePlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2110254466",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderApplicationPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2110254466",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderApplicationPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2110254466",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderApplicationPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"593492118",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"593492118",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2124295565",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionPlans",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2124295565",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionPlans",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-133467057",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPermissionsResource",
		"implementationMethod":"getPermissionsForCurrentUser",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"265482217",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidApplicationStatusException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"265482217",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ContractNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"265482217",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"265482217",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"265482217",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidApplicationStatusException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-246606276",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-246606276",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"623738724",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"list",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-58217493",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-58217493",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"-551412358",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppUsagePerService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-551412358",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppUsagePerService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-551412358",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppUsagePerService",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1408103619",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1408103619",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidNameException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1408103619",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1408103619",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"52438808",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revokeAll",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"52438808",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revokeAll",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"52438808",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revokeAll",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"52438808",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revokeAll",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-136334993",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-136334993",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-136334993",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-136334993",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1444301970",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1444301970",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1791893282",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listApps",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1791893282",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listApps",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1374696322",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revoke",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1374696322",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revoke",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1374696322",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revoke",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1374696322",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"revoke",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1588944898",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deletePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1588944898",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deletePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1588944898",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deletePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1588944898",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deletePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1273095339",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"list",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"927046441",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServicePolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"927046441",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServicePolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"927046441",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServicePolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675179834",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675179834",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675179834",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675179834",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"211026916",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlans",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"211026916",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlans",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"-996828075",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsagePerApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-996828075",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsagePerApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-996828075",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsagePerApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-75369965",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlanPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-75369965",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlanPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-75369965",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlanPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1193306311",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1193306311",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1193306311",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1193306311",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"1123438697",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStats",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1123438697",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStats",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1123438697",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStats",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1736700107",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1736700107",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1736700107",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1736700107",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1330388304",
		"implementationClass":"io.apiman.manager.api.rest.contract.ISearchResource",
		"implementationMethod":"searchOrgs",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidSearchCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1143148047",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServiceVersions",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1143148047",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listServiceVersions",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2017982009",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteAllContracts",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2017982009",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"deleteAllContracts",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"805219257",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"805219257",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"589907054",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"list",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1466094454",
		"implementationClass":"io.apiman.manager.api.rest.contract.IUserResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1105661559",
		"implementationClass":"io.apiman.manager.api.rest.contract.IUserResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1105661559",
		"implementationClass":"io.apiman.manager.api.rest.contract.IUserResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"1740739630",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1740739630",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidVersionException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1740739630",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1740739630",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1740739630",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1900284087",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1900284087",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1900284087",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1900284087",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServicePolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1341658164",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"test",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1349655703",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderPlanPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1349655703",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderPlanPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1349655703",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderPlanPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-393357420",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"getPolicyForm",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-393357420",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"getPolicyForm",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyDefinitionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-393357420",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"getPolicyForm",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginResourceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1415376726",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.GatewayNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1415376726",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1016258949",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"grant",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1016258949",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"grant",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1016258949",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"grant",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1016258949",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"grant",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"1755493586",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsPerApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1755493586",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsPerApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1755493586",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsPerApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1313878763",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listAppPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1313878763",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listAppPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1313878763",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listAppPolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAXRS_MISSING_CONSUMES",
		"description":"Interface specifies a JAXRS-BODY parameter, but does not specify a Consumes value.",
		"failedBuild":"false",
		"interface":"-566011861",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"update",
		"entity":null,
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-566011861",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyDefinitionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-566011861",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2013812959",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2013812959",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidServiceStatusException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2013812959",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateServiceDefinition",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"969003111",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updatePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"969003111",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updatePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"969003111",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updatePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"969003111",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updatePlanPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1820549874",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1820549874",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675432518",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidNameException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675432518",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-675432518",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-181241607",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlanVersions",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-181241607",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listPlanVersions",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"891448105",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"891448105",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"891448105",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"365239146",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsPerPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"365239146",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsPerPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"365239146",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsPerPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1965772529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"search",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidSearchCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1965772529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"search",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-126836521",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServicePolicyChain",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-126836521",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServicePolicyChain",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1101902538",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1101902538",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.GatewayAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-353746306",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppVersionActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-353746306",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppVersionActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1860241840",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyDefinitionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1860241840",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-342742837",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-342742837",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-38162105",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-38162105",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-13370829",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-13370829",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-13370829",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-13370829",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateAppPolicy",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1845183494",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1845183494",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1845183494",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"create",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"355787714",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"355787714",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidNameException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"355787714",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"355787714",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlan",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"290755230",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionEndpointInfo",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.GatewayNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"290755230",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionEndpointInfo",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"290755230",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionEndpointInfo",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidServiceStatusException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-155724339",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-155724339",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"-1189204529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1189204529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidVersionException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1189204529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1189204529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1189204529",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"990611556",
		"implementationClass":"io.apiman.manager.api.rest.contract.IUserResource",
		"implementationMethod":"search",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidSearchCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"644020799",
		"implementationClass":"io.apiman.manager.api.rest.contract.ISearchResource",
		"implementationMethod":"searchServices",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"644020799",
		"implementationClass":"io.apiman.manager.api.rest.contract.ISearchResource",
		"implementationMethod":"searchServices",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidSearchCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1217189892",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanVersionActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1217189892",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanVersionActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-925476280",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PluginNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-925476280",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPluginResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-17039270",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ContractNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-17039270",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-17039270",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1625443411",
		"implementationClass":"io.apiman.manager.api.rest.contract.ISearchResource",
		"implementationMethod":"searchApps",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1625443411",
		"implementationClass":"io.apiman.manager.api.rest.contract.ISearchResource",
		"implementationMethod":"searchApps",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidSearchCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1326787891",
		"implementationClass":"io.apiman.manager.api.rest.contract.IActionResource",
		"implementationMethod":"performAction",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ActionException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"1369248390",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsage",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1369248390",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsage",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1369248390",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getUsage",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1670053020",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionContracts",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1670053020",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionContracts",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1561085416",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1561085416",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1561085416",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1561085416",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ContractAlreadyExistsException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1561085416",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1561085416",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"createContract",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1743265666",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1743265666",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2141749137",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2141749137",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1747621883",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listAppVersions",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1747621883",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listAppVersions",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"259605984",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.RoleNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"259605984",
		"implementationClass":"io.apiman.manager.api.rest.contract.IRoleResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"813751855",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"813751855",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getAppVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"7562805",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.GatewayNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"7562805",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1737627941",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPermissionsResource",
		"implementationMethod":"getPermissionsForUser",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.UserNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1737627941",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPermissionsResource",
		"implementationMethod":"getPermissionsForUser",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1212407589",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApiRegistryJSON",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1212407589",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApiRegistryJSON",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-284625355",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PlanVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-284625355",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getPlanVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2124149093",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-2124149093",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersion",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1012710573",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listMembers",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1012710573",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"listMembers",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"JAVADOC_MISSING_EXCEPTION_DOCUMENTATION",
		"description":"Exception thrown by method has no comment",
		"failedBuild":"false",
		"interface":"-664114902",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsSummary",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-664114902",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsSummary",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.InvalidMetricCriteriaException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-664114902",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getResponseStatsSummary",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2131379690",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"2131379690",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getServiceVersionActivity",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"874780892",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyDefinitionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"874780892",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"get",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1829604231",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderServicePolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.OrganizationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1829604231",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderServicePolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ServiceVersionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1829604231",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"reorderServicePolicies",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1813846193",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.PolicyDefinitionNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1813846193",
		"implementationClass":"io.apiman.manager.api.rest.contract.IPolicyDefinitionResource",
		"implementationMethod":"delete",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1274908584",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApiRegistryXML",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-1274908584",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"getApiRegistryXML",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1350378359",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.GatewayNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"1350378359",
		"implementationClass":"io.apiman.manager.api.rest.contract.IGatewayResource",
		"implementationMethod":"update",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-173738590",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.ApplicationNotFoundException",
	},
	{
		"category":"REST_UNMAPPED_EXCEPTION",
		"description":"Exception is thrown by interface specification, but is not mapped in the MireDot configuration. As such, the return errorcode can not be documented properly.",
		"failedBuild":"false",
		"interface":"-173738590",
		"implementationClass":"io.apiman.manager.api.rest.contract.IOrganizationResource",
		"implementationMethod":"updateApp",
		"entity":"io.apiman.manager.api.rest.contract.exceptions.NotAuthorizedException",
	},
];
com.qmino.miredot.processErrors = [
];

