---
layout: post
title:  "Finally!  Apiman 1.2.1.Final is released!"
date:   2016-01-22 11:30:00
author: eric_wittmann
tags: apiman
---

It's been ages since apiman had a new release!  Well the reason for that is we've been
pushing to get the first version of *1.2.x* out the door.  I'm here to tell you - that
day has finally arrived.

We're happy to announce apiman *1.2.1.Final*.  Our goal is now to go back to our previous,
more frequent, release schedule.

<!--more-->

## Where can I find more information?

We've updated the website, the guides, and other collateral information to reflect all
of the additions and changes in the new version.  For more information about this latest
release of apiman, here are some useful links:

* [1.2.0.Final Release Notes](https://red.ht/1OK3LG7)
* [1.2.1.Final Release Notes](https://red.ht/1OC1Tf7)
* [The apiman project site](https://www.apiman.io/)
* [Latest User Guide](https://www.apiman.io/latest/user-guide.html)

## But I don't like following links!

Don't want to slog through the links above?  I totally understand - let me give you a quick
high level overview of what's new in 1.2 (rhyming ftw).

You should probably expect to see more detailed blog posts and documentation for each of the
following, so stay tuned!

### Entity Renaming

I suspect this will become a separate blog post, because it probably needs repeating.  After
getting feedback from users, it has become clear that the names of the apiman entities/objects
aren't very intuitive.  The *1.1.x* version of apiman used the following names:

* Organization
* Plan
* Service
* Application

In the new version of apiman, we made some changes to try and make things a bit more clear.
It turns out that the first two concepts are clear enough, but Service and Application are
a little bit ambiguous.  So the new names in apiman *1.2.x* are:

* Organization
* Plan
* API
* Client App  (aka Client)

Functionally everything works the same, it's just the names that have changed.  It's worth
pointing out that the renaming isn't just superficial (e.g. text in the UI).  Instead, we 
refactored all of the code and the REST endpoints to reflect these new concepts.

### Plugin Support

We already had interesting support for plugins, but now we've gone further and made it much
easier to find, install, test, and upgrade apiman plugins.  There's a new Administration UI
where you can see a list of available plugins and easily install them.  If you are creating
your own plugin you can easily reload and/or uninstall plugins to make it easier to test your
changes.  And finally, if your plugin version ends with *-SNAPSHOT* then apiman will 
automatically reload the plugin every time it is used.  This makes it VERY easy to iterate on
the plugin code and see the results quickly, without doing anything in the UI and without
restarting apiman!

### Import/Export

One of the really nice new features in *1.2.x* is the ability to export your apiman configuration
to a file, which can later be imported into a different apiman system.  This feature is
designed to satisfy the following use-cases:

* Backing up your apiman data
* Migrating apiman data from a *Test* environment to a *Production* environment
* Upgrading to a newer version of apiman

We'll follow up this blog post with one that goes into this feature in more depth.

## What happened to 1.2.0.Final?

You know what, don't even worry about it.


/post
